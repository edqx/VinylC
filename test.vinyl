type Drink = @object {
  ingredients: seq<string>;
  popularity: int;

  static new(ingredients: seq<string>, popularity: int): Drink {
    result = new(Drink);
    result.ingredients = ingredients;
    result.popularity = popularity;
  }

  base method drink(): void {
    print("drinking drink made from " & drink.ingredients);
  }
};

type Milkshake = @object of Drink {
  flavour: string;

  static new(ingredients: seq<string>, popularity: int, flavour: string): Milkshake {
    result = new(Milkshake);
    result.ingredients = ingredients;
    result.popularity = popularity;
    result.flavour = flavour;
  }

  override method drink(): void {
    print("drinking " & self.flavour & " milkshake");
  }
}

var strawberryMilkshake = Milkshake.new(seq.new([ "strawberries", "milk", "shake" ]), 50, "strawberry");
var hotChocolate = Drink.new(seq.new([ "cocoa", "cream", "dragon tooth" ]), 35);

strawberryMilkshake.drink();
hotChocolate.drink();